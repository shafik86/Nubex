@page "/Product/Detail/{Id:int}"
@page "/Product/Detail"
@inject IProductRepository _ProductRepository
@inject IProductPremiumRepository _productPremiumRepository
@inject IJSRuntime jsRuntime

<style>
    .hor-scroll {
        overflow: auto;
        white-space: nowrap;
    }

        .hor-scroll img {
            display: inline-block;
        }
</style>

<main class="mt-5 pt-4">
    <div class="container dark-grey-text mt-5">
        <div class="row wow fadeIn">
            <div class="col-md-6 mb-4">
                <img src="images/product/03df3807-2dce-4957-ae55-1eff72670e93.jpg" class="img-fluid" alt="">
            </div>
            <div class="col-md-6 mb-4">
                <div class="p-4">
                    <h2 class="font-bold">@Product.ProductName</h2>
                    <p class="fw-bold">SKU: GB9999-50g-PS-CB_NC-AA</p>
                    <div class="mb-3">
                        <a href="">
                            <span class="badge purple mr-1">A+</span>
                        </a>
                        <a href="">
                            <span class="badge blue mr-1">A</span>
                        </a>
                        <a href="">
                            <span class="badge red mr-1">B+</span>
                        </a>
                    </div>
                    <p class="lead">
                        <span class="mr-1">
                            <del>MYR 13,500</del>
                        </span>
                    </p>

                    <p>
                        <span>MYR 13,000</span>
                    </p>

                        @*@foreach (var item in ProductPrices)
                        {
                            <p>@item.Condition</p>
                        }*@
                    <p>
                        <button type="button" class="btn btn-dark btn-sm">A+</button>
                        <button type="button" class="btn btn-dark btn-sm">A</button>
                        <button type="button" class="btn btn-dark btn-sm">B</button>
                        <button type="button" class="btn btn-dark btn-sm">C</button>
                        <button type="button" class="btn btn-dark btn-sm">D</button>
                    </p>
                    <p class="lead">10 In Stock</p>
                    <form class="d-flex justify-content-left">
                        <input type="number" value="1" aria-label="Search" class="form-control" style="width: 80px">


                    </form>
                    <br />
                    <button class="btn btn-dark btn-md my-0 p" type="submit">
                        Add to cart
                    </button>
                </div>
            </div>
        </div>
        <hr>
        <div class="row d-flex justify-content-center wow fadeIn">
            <div class="col-md-6 text-center">
                <h4 class="my-4 h4 fw-bold">Additional Information</h4>
                <p>
                    Perfect for a medium and large scale investor, this brand new 50g of 999.9 gold cast bar is refined to perfection by PAMP. it is shipped with an assay certificate signed by a certified assayer.
                </p>
            </div>
        </div>
        <div class="row wow fadeIn">
            <div class="col-lg-4 col-md-12 mb-4">
                <img src="images/default.jpg" class="rounded img-fluid" alt="">
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <img src="images/default.jpg" class="rounded img-fluid" alt="">
            </div>
            <div class="col-lg-4 col-md-6 mb-4">
                <img src="images/default.jpg" class="rounded img-fluid" alt="">
            </div>
        </div>
    </div>
</main>

@code {
    [Parameter]
    public int Id { get; set; }
    public ProductDTO Product { get; set; } = new();
    public IEnumerable<ProductPremiumDTO> ProductPrices { get; set; }
    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading = true;
            StateHasChanged();
            ProductPrices = await _productPremiumRepository.GetAll(Id);
            Product = await _ProductRepository.GetById(Id);
            IsLoading = false;
            StateHasChanged();
        }
    }
}