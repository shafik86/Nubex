@page "/product/price/{Id:int}"
@inject IProductRepository _ProductRepository
@inject IProductPremiumRepository _productPremiumRepository
@inject IJSRuntime _JsRuntime
@attribute [Authorize]

<div class="row mt-4">
    <div class="col-6">

        <h3 class="card-title text-primary mb-3 ml-3">Product Premium Management</h3>
    </div>
    <div class=" col-2  offset-4  align-content-end">
        <a href="@($"product/price/Create/{Product.ProductId}")" class="btn btn-primary form-control" style="width:100%;">Add New Premium</a>
    </div>
    @if (IsLoading)
    {
        //loading
        <div class="col-12">
                <progress class="progress-bar-animated w-100">

                </progress>
            </div>
    }
    else
    {
        <div class="container-md border col-12 pt-3 mb-2">
            <div class="row">
                <div class="col-3">
                    <img src="@Product.Image1" class="mb-3" style="width:150px;height:150px;" />
                </div>
                <div class="col-6">
                    <h3>@Product.ProductName</h3>
                    <h5># @Product.ProductSKU</h5>
                    <p>@Category</p>
                    <p>@((MarkupString)Product.Description)</p>
                </div>
            </div>
        </div>
        <div class="container-md border col-12 pt-3 mb-2">
            <table class="table">
                <thead>
                    <tr>
                        
                        <th>Conditions</th>
                        <th>Premium Price</th>
                        <th>Quantity</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ProductPrices)
                    {
                        <tr>
                            <td>@item.Condition</td>
                            <td>@item.PriceAdd</td>
                            <td>@item.Quantity</td>
                            <td>
                                <NavLink href="@($"product/price/edit/{item.Id}")" class="btn btn-primary rounded-2">
                                    <span class="oi oi-pencil" aria-hidden="true" />
                                </NavLink>
                                <NavLink @onclick="()=>HandleDelete(item.Id)" class="btn btn-danger rounded-2">
                                    <span class="oi oi-x" aria-hidden="true" />
                                    
                                </NavLink>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
    }

</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public ProductDTO Product { get; set; } = new();
    public IEnumerable<ProductPremiumDTO> ProductPrices { get; set; } = new List<ProductPremiumDTO>();
    public bool IsLoading { get; set; } = false;
    public string Category { get; set; }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            IsLoading = true;
            StateHasChanged();
            Product = await _ProductRepository.GetById(Id);
            LoadItem();
            IsLoading = false;
            StateHasChanged();
        }
    }

    public async void LoadItem()
    {
        //Product = await _ProductRepository.GetById(Id);
        ProductPrices = Product.ProductPrices;
        Category = Product.Category.Name;
    }
 
    private async void HandleDelete(int id)
    {
        var pricePremium = await _productPremiumRepository.GetById(id);
        if(id != 0 || id != null)
        {
            await _productPremiumRepository.Delete(id);
            _JsRuntime.ToastrSuccess($"Product Premium for {pricePremium.Condition} is successful deleted");
            LoadItem();
            StateHasChanged();
        }
    }
}